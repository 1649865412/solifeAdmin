## This is a velocity template
## to generate a model class from an sql table input
#set ($table = $sqlTable.Table)
#set ($class = $utility.makeClassName($sqlTable.EntityName))
#set ($classVar = $utility.makeFirstLetterLowerCase($class))
#set ($packagePrefix  = $prop.getProperty("packagePrefix"))
#set ($packageModot  = $prop.getProperty("packageModot"))
#set ($keyfield = $sqlTable.getPrimaryKey(0).getColname())
#set ($keytype  = $sqlTable.getPrimaryKey(0).getAttType())
#set ($keyVar= $utility.makeVarName($keyfield))
#set ($keyVarUC = $utility.makeFirstLetterUpperCase($keyVar))
package ${packagePrefix}${packageModot}.service.impl;

import java.util.List;

import ${packagePrefix}${packageModot}.dao.${class}DAO;
import ${packagePrefix}.common.model${packageModot}.${class};
import ${packagePrefix}${packageModot}.service.${class}ManagerBase;
import ${packagePrefix}.common.PagingBean;
import ${packagePrefix}.service.impl.BaseManagerImpl;
import com.cartmatic.estore.dao.BaseDAO;
#if ($sqlTable.hasCompositeKey)
import ${packagePrefix}.common.model${packageModot}.base.${class}PK;
#end

/**
 * Implementation of ${class}ManagerBase interface.
 *
 * Generated and maintained by tools (AppfuseGenerator).
 * Avoid changing in this file, because it will be overwritten.
 * 
 */
public class ${class}ManagerBaseImpl extends BaseManagerImpl implements ${class}ManagerBase {
    protected ${class}DAO dao;

    /**
     * Set the DAO for communication with the data layer.
     * @param dao
     */
    public void set${class}DAO(${class}DAO inDao) {
        this.dao = inDao;
    }

    /**
     * @see ${packagePrefix}${packageModot}.service.${class}ManagerBase#get${class}($keytype)
     */
#if ($sqlTable.hasCompositeKey)
    public ${class} get${class}(${class}PK pkey) {
#else
    public ${class} get${class}($keytype pkey) {
#end
        return dao.get${class}(pkey);
    }

    /**
     * @see ${packagePrefix}${packageModot}.service.${class}ManagerBase#save${class}(${class})
     */
    public void save${class}(${class} $classVar) {
        dao.save${class}($classVar);
    }

    /**
     * @see ${packagePrefix}${packageModot}.service.${class}ManagerBase#remove${class}($keytype)
     */
#if ($sqlTable.hasCompositeKey)
    public void remove${class}(${class}PK pkey) {
#else
    public void remove${class}($keytype pkey) {
#end
        if (logger.isDebugEnabled()) {
            logger.debug("removing $classVar: " + pkey);
        }

        dao.remove${class}(pkey);
    }

    /**
     * Defaine the referred concrete dao, used in BaseManagerImpl.
     */
    protected BaseDAO getConcreteDao() {
        return dao;
    }

    /**
     * @see ${packagePrefix}${packageModot}.service.${class}ManagerBase#get${class}sByExample(${class},String,boolean,PagingBean)
     */
    public List get${class}sByExample(final ${class} $classVar,final String orderProperty,final boolean useDesc, PagingBean pb){
    	return dao.get${class}sByExample($classVar, orderProperty, useDesc, pb);
    }
}
