## This is a velocity template
## to generate a Spring controller class from an sql table input
#set ($table = $sqlTable.Table)
#set ($class = $utility.makeClassName($sqlTable.EntityName))
#set ($classVar = $utility.makeFirstLetterLowerCase($class))
#set ($packagePrefix  = $prop.getProperty("packagePrefix"))
#set ($packageMod  = $prop.getProperty("packageMod"))
#set ($keyColumn = $sqlTable.getPrimaryKey(0))
#set ($keyfield = $sqlTable.getPrimaryKey(0).getColname())
#set ($keytype  = $sqlTable.getPrimaryKey(0).getAttType())
#set ($keyVar= $utility.makeVarName($keyfield))
#set ($keyVarUC = $utility.makeFirstLetterUpperCase($keyVar))
package ${packagePrefix}.${packageMod}.web.action;

import java.util.Map;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import ${packagePrefix}.Constants;
import ${packagePrefix}.${packageMod}.web.action.${class}Controller;
import org.springframework.web.servlet.ModelAndView;

public class ${class}ControllerTest extends ${packagePrefix}.webapp.action.BaseControllerTestCase {

    public void testHandleRequest() throws Exception {
        ${class}Controller c = (${class}Controller) ctx.getBean("${classVar}Controller");
        MockHttpServletRequest request = newGet("/${packageMod}/${classVar}List.html");
        ModelAndView mav = c.handleRequest(request,
                new MockHttpServletResponse());
        Map m = mav.getModel();
        assertNotNull(m.get(Constants.${class}_LIST));
        assertEquals(mav.getViewName(), "${packageMod}/${classVar}List");
    }
}